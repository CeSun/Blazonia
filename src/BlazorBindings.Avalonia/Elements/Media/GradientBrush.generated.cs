// <auto-generated>
//     This code was generated by a BlazorBindings.Avalonia component generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using AM = Avalonia.Media;
using BlazorBindings.AvaloniaBindings.Elements;

#pragma warning disable CA2252

namespace BlazorBindings.AvaloniaBindings.Elements.Media
{
    /// <summary>
    /// Base class for brushes that draw with a gradient.
    /// </summary>
    public abstract partial class GradientBrush : Brush
    {
        static GradientBrush()
        {
            RegisterAdditionalHandlers();
        }

        [Parameter] public AM.GradientStops GradientStops { get; set; }
        [Parameter] public AM.GradientSpreadMethod? SpreadMethod { get; set; }

        public new AM.GradientBrush NativeControl => (AM.GradientBrush)((BindableObject)this).NativeControl;


        protected override void HandleParameter(string name, object value)
        {
            switch (name)
            {
                case nameof(GradientStops):
                    if (!Equals(GradientStops, value))
                    {
                        GradientStops = (AM.GradientStops)value;
                        NativeControl.GradientStops = GradientStops;
                    }
                    break;
                case nameof(SpreadMethod):
                    if (!Equals(SpreadMethod, value))
                    {
                        SpreadMethod = (AM.GradientSpreadMethod?)value;
                        NativeControl.SpreadMethod = SpreadMethod ?? (AM.GradientSpreadMethod)AM.GradientBrush.SpreadMethodProperty.GetDefaultValue(AM.GradientBrush.SpreadMethodProperty.OwnerType);
                    }
                    break;

                default:
                    base.HandleParameter(name, value);
                    break;
            }
        }

        static partial void RegisterAdditionalHandlers();
    }
}
