// <auto-generated>
//     This code was generated by a BlazorBindings.Avalonia component generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using AM = Avalonia.Media;
using BlazorBindings.AvaloniaBindings.Elements;
using BlazorBindings.Core;
using Microsoft.AspNetCore.Components;
using System.Threading.Tasks;

#pragma warning disable CA2252

namespace BlazorBindings.AvaloniaBindings.Elements.Media
{
    /// <summary>
    /// Paints an area with a radial gradient.
    /// </summary>
    public partial class RadialGradientBrush : GradientBrush
    {
        static RadialGradientBrush()
        {
            RegisterAdditionalHandlers();
        }

        /// <summary>
        /// Gets or sets the start point for the gradient.
        /// </summary>
        [Parameter] public global::Avalonia.RelativePoint? Center { get; set; }
        /// <summary>
        /// Gets or sets the location of the two-dimensional focal point that defines the beginning of the gradient.
        /// </summary>
        [Parameter] public global::Avalonia.RelativePoint? GradientOrigin { get; set; }
        /// <summary>
        /// Gets or sets the horizontal and vertical radius of the outermost circle of the radial gradient.
        /// </summary>
        [Parameter] public double? Radius { get; set; }

        public new AM.RadialGradientBrush NativeControl => (AM.RadialGradientBrush)((BindableObject)this).NativeControl;

        protected override AM.RadialGradientBrush CreateNativeElement() => new();

        protected override void HandleParameter(string name, object value)
        {
            switch (name)
            {
                case nameof(Center):
                    if (!Equals(Center, value))
                    {
                        Center = (global::Avalonia.RelativePoint?)value;
                        NativeControl.Center = Center ?? (global::Avalonia.RelativePoint)AM.RadialGradientBrush.CenterProperty.GetDefaultValue(AM.RadialGradientBrush.CenterProperty.OwnerType);
                    }
                    break;
                case nameof(GradientOrigin):
                    if (!Equals(GradientOrigin, value))
                    {
                        GradientOrigin = (global::Avalonia.RelativePoint?)value;
                        NativeControl.GradientOrigin = GradientOrigin ?? (global::Avalonia.RelativePoint)AM.RadialGradientBrush.GradientOriginProperty.GetDefaultValue(AM.RadialGradientBrush.GradientOriginProperty.OwnerType);
                    }
                    break;
                case nameof(Radius):
                    if (!Equals(Radius, value))
                    {
                        Radius = (double?)value;
                        NativeControl.Radius = Radius ?? (double)AM.RadialGradientBrush.RadiusProperty.GetDefaultValue(AM.RadialGradientBrush.RadiusProperty.OwnerType);
                    }
                    break;

                default:
                    base.HandleParameter(name, value);
                    break;
            }
        }

        static partial void RegisterAdditionalHandlers();
    }
}
