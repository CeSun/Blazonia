// <auto-generated>
//     This code was generated by a BlazorBindings.Avalonia component generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using ACP = Avalonia.Controls.Primitives;
using BlazorBindings.Avalonia.Elements;
using Microsoft.AspNetCore.Components.Rendering;

#pragma warning disable CA2252

namespace BlazorBindings.Avalonia.Elements.Primitives
{
    /// <summary>
    /// A <see cref="T:Avalonia.Controls.ContentControl" /> with a header.
    /// </summary>
    public partial class HeaderedContentControl : ContentControl
    {
        static HeaderedContentControl()
        {
            RegisterAdditionalHandlers();
        }

        /// <summary>
        /// Gets or sets the header content.
        /// </summary>
        [Parameter] public object Header { get; set; }
        /// <summary>
        /// Gets or sets the data template used to display the header content of the control.
        /// </summary>
        [Parameter] public RenderFragment<object> HeaderTemplate { get; set; }

        public new ACP.HeaderedContentControl NativeControl => (ACP.HeaderedContentControl)((AvaloniaObject)this).NativeControl;

        protected override ACP.HeaderedContentControl CreateNativeElement() => new();

        protected override void HandleParameter(string name, object value)
        {
            switch (name)
            {
                case nameof(Header):
                    if (!Equals(Header, value))
                    {
                        Header = (object)value;
                        NativeControl.Header = Header;
                    }
                    break;
                case nameof(HeaderTemplate):
                    HeaderTemplate = (RenderFragment<object>)value;
                    break;

                default:
                    base.HandleParameter(name, value);
                    break;
            }
        }

        protected override void RenderAdditionalElementContent(RenderTreeBuilder builder, ref int sequence)
        {
            base.RenderAdditionalElementContent(builder, ref sequence);
            RenderTreeBuilderHelper.AddDataTemplateProperty<ACP.HeaderedContentControl, object>(builder, sequence++, HeaderTemplate,
                (nativeControl, nativeTemplate) => nativeControl.HeaderTemplate = nativeTemplate);
        }

        static partial void RegisterAdditionalHandlers();
    }
}
