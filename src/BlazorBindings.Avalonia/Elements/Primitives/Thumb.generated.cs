// <auto-generated>
//     This code was generated by a BlazorBindings.Avalonia component generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using ACP = Avalonia.Controls.Primitives;
using BlazorBindings.Avalonia.Elements;

#pragma warning disable CA2252

namespace BlazorBindings.Avalonia.Elements.Primitives
{
    public partial class Thumb : TemplatedControl
    {
        static Thumb()
        {
            RegisterAdditionalHandlers();
        }

        [Parameter] public EventCallback<global::Avalonia.Input.VectorEventArgs> OnDragStarted { get; set; }
        [Parameter] public EventCallback<global::Avalonia.Input.VectorEventArgs> OnDragDelta { get; set; }
        [Parameter] public EventCallback<global::Avalonia.Input.VectorEventArgs> OnDragCompleted { get; set; }

        public new ACP.Thumb NativeControl => (ACP.Thumb)((AvaloniaObject)this).NativeControl;

        protected override ACP.Thumb CreateNativeElement() => new();

        protected override void HandleParameter(string name, object value)
        {
            switch (name)
            {
                case nameof(OnDragStarted):
                    if (!Equals(OnDragStarted, value))
                    {
                        void NativeControlDragStarted(object sender, global::Avalonia.Input.VectorEventArgs e) => InvokeEventCallback(OnDragStarted, e);

                        OnDragStarted = (EventCallback<global::Avalonia.Input.VectorEventArgs>)value;
                        NativeControl.DragStarted -= NativeControlDragStarted;
                        NativeControl.DragStarted += NativeControlDragStarted;
                    }
                    break;
                case nameof(OnDragDelta):
                    if (!Equals(OnDragDelta, value))
                    {
                        void NativeControlDragDelta(object sender, global::Avalonia.Input.VectorEventArgs e) => InvokeEventCallback(OnDragDelta, e);

                        OnDragDelta = (EventCallback<global::Avalonia.Input.VectorEventArgs>)value;
                        NativeControl.DragDelta -= NativeControlDragDelta;
                        NativeControl.DragDelta += NativeControlDragDelta;
                    }
                    break;
                case nameof(OnDragCompleted):
                    if (!Equals(OnDragCompleted, value))
                    {
                        void NativeControlDragCompleted(object sender, global::Avalonia.Input.VectorEventArgs e) => InvokeEventCallback(OnDragCompleted, e);

                        OnDragCompleted = (EventCallback<global::Avalonia.Input.VectorEventArgs>)value;
                        NativeControl.DragCompleted -= NativeControlDragCompleted;
                        NativeControl.DragCompleted += NativeControlDragCompleted;
                    }
                    break;

                default:
                    base.HandleParameter(name, value);
                    break;
            }
        }

        static partial void RegisterAdditionalHandlers();
    }
}
