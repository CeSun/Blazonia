// <auto-generated>
//     This code was generated by a BlazorBindings.Avalonia component generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>


using BlazorBindings.Avalonia.Elements.Primitives;

#pragma warning disable CA2252

namespace BlazorBindings.Avalonia.Elements
{
    /// <summary>
    /// An item in a <see cref="T:Avalonia.Controls.TabControl" />.
    /// </summary>
    public partial class TabItem : HeaderedContentControl
    {
        static TabItem()
        {
            RegisterAdditionalHandlers();
        }

        /// <summary>
        /// Gets or sets the selection state of the item.
        /// </summary>
        [Parameter] public bool? IsSelected { get; set; }

        public new AC.TabItem NativeControl => (AC.TabItem)((AvaloniaObject)this).NativeControl;

        protected override AC.TabItem CreateNativeElement() => new();

        protected override void HandleParameter(string name, object value)
        {
            switch (name)
            {
                case nameof(IsSelected):
                    if (!Equals(IsSelected, value))
                    {
                        IsSelected = (bool?)value;
                        NativeControl.IsSelected = IsSelected ?? (bool)AC.TabItem.IsSelectedProperty.GetDefaultValue(AC.TabItem.IsSelectedProperty.OwnerType);
                    }
                    break;

                default:
                    base.HandleParameter(name, value);
                    break;
            }
        }

        static partial void RegisterAdditionalHandlers();
    }
}
