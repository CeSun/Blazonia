@* @page "/main" *@
@* @inherits BlazorBindings.AvaloniaBindings.Elements.Window *@

@using BlazorBindings.AvaloniaBindings.Elements
@using System.Collections.ObjectModel;
@using global::Avalonia.Layout
@using global::Avalonia
@using global::Avalonia.Media;

<StackPanel
    HorizontalAlignment="HorizontalAlignment.Center"
    VerticalAlignment="VerticalAlignment.Center"
    >
    <TextBlock Text="Hello World"></TextBlock>
    @if (buttonVisible == true)
    {
        <Button OnClick="OnCounterClicked">Click me</Button>
    }
    <TextBlock Text="@ButtonText"></TextBlock>

    <CheckBox @bind-IsChecked="buttonVisible">Button visible</CheckBox>

    <ListBox ItemsSource="Items">
        <ItemTemplate>
            <StackPanel>
                <TextBlock Text="Content:"></TextBlock>
                <TextBlock Text="@context"></TextBlock>
            </StackPanel>
        </ItemTemplate>
        <ItemsPanel>
            <StackPanel Orientation="Orientation.Horizontal"></StackPanel>
        </ItemsPanel>
    </ListBox>
</StackPanel>

@code {

    int count = 0;
    bool? buttonVisible {get; set; } = true;
    ObservableCollection<string> Items { get; set; } = new ObservableCollection<string>(new []
    {
        "a",
        "b",
        "c"
    });

    void ToggleButton()
    {
        buttonVisible = !buttonVisible;
    }

    string ButtonText => count switch
    {
        0 => "Click me",
        1 => $"Clicked 1 time",
        _ => $"Clicked {count} times"
    };

    void OnCounterClicked()
    {
        count++;
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }
}