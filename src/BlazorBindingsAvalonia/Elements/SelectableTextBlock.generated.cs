// <auto-generated>
//     This code was generated by a BlazorBindingsAvalonia component generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>



#pragma warning disable CA2252

namespace BlazorBindingsAvalonia.Elements
{
    /// <summary>
    /// A control that displays a block of formatted text.
    /// </summary>
    public partial class SelectableTextBlock : TextBlock
    {
        static SelectableTextBlock()
        {
            RegisterAdditionalHandlers();
        }

        /// <summary>
        /// Gets or sets the brush that highlights selected text.
        /// </summary>
        [Parameter] public OneOf.OneOf<global::Avalonia.Media.IBrush, global::Avalonia.Media.Color, string> SelectionBrush { get; set; }
        /// <summary>
        /// Gets or sets a character index for the end of the current selection.
        /// </summary>
        [Parameter] public int? SelectionEnd { get; set; }
        /// <summary>
        /// Gets or sets a brush that is used for the foreground of selected text
        /// </summary>
        [Parameter] public OneOf.OneOf<global::Avalonia.Media.IBrush, global::Avalonia.Media.Color, string> SelectionForegroundBrush { get; set; }
        /// <summary>
        /// Gets or sets a character index for the beginning of the current selection.
        /// </summary>
        [Parameter] public int? SelectionStart { get; set; }
        [Parameter] public EventCallback<global::Avalonia.Interactivity.RoutedEventArgs> OnCopyingToClipboard { get; set; }

        public new AC.SelectableTextBlock NativeControl => (AC.SelectableTextBlock)((AvaloniaObject)this).NativeControl;

        protected override AC.SelectableTextBlock CreateNativeElement() => new();

        protected override void HandleParameter(string name, object value)
        {
            switch (name)
            {
                case nameof(SelectionBrush):
                    if (!Equals(SelectionBrush, value))
                    {
                        SelectionBrush = (OneOf.OneOf<global::Avalonia.Media.IBrush, Avalonia.Media.Color, string>)value;
                        if (SelectionBrush.IsT0)
                        {
                            NativeControl.SelectionBrush = (global::Avalonia.Media.IBrush)SelectionBrush.AsT0;
                        }
                        else if (SelectionBrush.IsT1)
                        {
                            NativeControl.SelectionBrush = new global::Avalonia.Media.Immutable.ImmutableSolidColorBrush(SelectionBrush.AsT1);
                        }
                        else 
                        {
                            NativeControl.SelectionBrush = Avalonia.Media.Brush.Parse(SelectionBrush.AsT2);
                        }
                    }
                    break;
                case nameof(SelectionEnd):
                    if (!Equals(SelectionEnd, value))
                    {
                        SelectionEnd = (int?)value;
                        NativeControl.SelectionEnd = SelectionEnd ?? (int)AC.SelectableTextBlock.SelectionEndProperty.GetDefaultValue(AC.SelectableTextBlock.SelectionEndProperty.OwnerType);
                    }
                    break;
                case nameof(SelectionForegroundBrush):
                    if (!Equals(SelectionForegroundBrush, value))
                    {
                        SelectionForegroundBrush = (OneOf.OneOf<global::Avalonia.Media.IBrush, Avalonia.Media.Color, string>)value;
                        if (SelectionForegroundBrush.IsT0)
                        {
                            NativeControl.SelectionForegroundBrush = (global::Avalonia.Media.IBrush)SelectionForegroundBrush.AsT0;
                        }
                        else if (SelectionForegroundBrush.IsT1)
                        {
                            NativeControl.SelectionForegroundBrush = new global::Avalonia.Media.Immutable.ImmutableSolidColorBrush(SelectionForegroundBrush.AsT1);
                        }
                        else 
                        {
                            NativeControl.SelectionForegroundBrush = Avalonia.Media.Brush.Parse(SelectionForegroundBrush.AsT2);
                        }
                    }
                    break;
                case nameof(SelectionStart):
                    if (!Equals(SelectionStart, value))
                    {
                        SelectionStart = (int?)value;
                        NativeControl.SelectionStart = SelectionStart ?? (int)AC.SelectableTextBlock.SelectionStartProperty.GetDefaultValue(AC.SelectableTextBlock.SelectionStartProperty.OwnerType);
                    }
                    break;
                case nameof(OnCopyingToClipboard):
                    if (!Equals(OnCopyingToClipboard, value))
                    {
                        void NativeControlCopyingToClipboard(object sender, global::Avalonia.Interactivity.RoutedEventArgs e) => InvokeEventCallback(OnCopyingToClipboard, e);

                        OnCopyingToClipboard = (EventCallback<global::Avalonia.Interactivity.RoutedEventArgs>)value;
                        NativeControl.CopyingToClipboard -= NativeControlCopyingToClipboard;
                        NativeControl.CopyingToClipboard += NativeControlCopyingToClipboard;
                    }
                    break;

                default:
                    base.HandleParameter(name, value);
                    break;
            }
        }

        static partial void RegisterAdditionalHandlers();
    }
}
