// <auto-generated>
//     This code was generated by a BlazorBindingsAvalonia component generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>



#pragma warning disable CA2252

namespace BlazorBindingsAvalonia.Elements
{
    /// <summary>
    /// A control which decorates a child with a border and background.
    /// </summary>
    public partial class Border : Decorator
    {
        static Border()
        {
            RegisterAdditionalHandlers();
        }

        /// <summary>
        /// Gets or sets a brush with which to paint the background.
        /// </summary>
        [Parameter] public global::Avalonia.Media.IBrush Background { get; set; }
        /// <summary>
        /// Gets or sets how the background is drawn relative to the border.
        /// </summary>
        [Parameter] public global::Avalonia.Media.BackgroundSizing? BackgroundSizing { get; set; }
        /// <summary>
        /// Gets or sets a brush with which to paint the border.
        /// </summary>
        [Parameter] public global::Avalonia.Media.IBrush BorderBrush { get; set; }
        /// <summary>
        /// Gets or sets the thickness of the border.
        /// </summary>
        [Parameter] public global::Avalonia.Thickness? BorderThickness { get; set; }
        /// <summary>
        /// Gets or sets the box shadow effect parameters
        /// </summary>
        [Parameter] public global::Avalonia.Media.BoxShadows? BoxShadow { get; set; }
        /// <summary>
        /// Gets or sets the radius of the border rounded corners.
        /// </summary>
        [Parameter] public global::Avalonia.CornerRadius? CornerRadius { get; set; }

        public new AC.Border NativeControl => (AC.Border)((AvaloniaObject)this).NativeControl;

        protected override AC.Border CreateNativeElement() => new();

        protected override void HandleParameter(string name, object value)
        {
            switch (name)
            {
                case nameof(Background):
                    if (!Equals(Background, value))
                    {
                        Background = (global::Avalonia.Media.IBrush)value;
                        NativeControl.Background = Background;
                    }
                    break;
                case nameof(BackgroundSizing):
                    if (!Equals(BackgroundSizing, value))
                    {
                        BackgroundSizing = (global::Avalonia.Media.BackgroundSizing?)value;
                        NativeControl.BackgroundSizing = BackgroundSizing ?? (global::Avalonia.Media.BackgroundSizing)AC.Border.BackgroundSizingProperty.GetDefaultValue(AC.Border.BackgroundSizingProperty.OwnerType);
                    }
                    break;
                case nameof(BorderBrush):
                    if (!Equals(BorderBrush, value))
                    {
                        BorderBrush = (global::Avalonia.Media.IBrush)value;
                        NativeControl.BorderBrush = BorderBrush;
                    }
                    break;
                case nameof(BorderThickness):
                    if (!Equals(BorderThickness, value))
                    {
                        BorderThickness = (global::Avalonia.Thickness?)value;
                        NativeControl.BorderThickness = BorderThickness ?? (global::Avalonia.Thickness)AC.Border.BorderThicknessProperty.GetDefaultValue(AC.Border.BorderThicknessProperty.OwnerType);
                    }
                    break;
                case nameof(BoxShadow):
                    if (!Equals(BoxShadow, value))
                    {
                        BoxShadow = (global::Avalonia.Media.BoxShadows?)value;
                        NativeControl.BoxShadow = BoxShadow ?? (global::Avalonia.Media.BoxShadows)AC.Border.BoxShadowProperty.GetDefaultValue(AC.Border.BoxShadowProperty.OwnerType);
                    }
                    break;
                case nameof(CornerRadius):
                    if (!Equals(CornerRadius, value))
                    {
                        CornerRadius = (global::Avalonia.CornerRadius?)value;
                        NativeControl.CornerRadius = CornerRadius ?? (global::Avalonia.CornerRadius)AC.Border.CornerRadiusProperty.GetDefaultValue(AC.Border.CornerRadiusProperty.OwnerType);
                    }
                    break;

                default:
                    base.HandleParameter(name, value);
                    break;
            }
        }

        static partial void RegisterAdditionalHandlers();
    }
}
