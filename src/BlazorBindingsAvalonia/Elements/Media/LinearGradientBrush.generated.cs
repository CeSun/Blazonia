// <auto-generated>
//     This code was generated by a BlazorBindingsAvalonia component generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using AM = Avalonia.Media;
using BlazorBindingsAvalonia.Elements;

#pragma warning disable CA2252

namespace BlazorBindingsAvalonia.Elements.Media
{
    /// <summary>
    /// A brush that draws with a linear gradient.
    /// </summary>
    public partial class LinearGradientBrush : GradientBrush
    {
        static LinearGradientBrush()
        {
            RegisterAdditionalHandlers();
        }

        /// <summary>
        /// Gets or sets the end point for the gradient.
        /// </summary>
        [Parameter] public OneOf.OneOf<global::Avalonia.RelativePoint?, string> EndPoint { get; set; }
        /// <summary>
        /// Gets or sets the start point for the gradient.
        /// </summary>
        [Parameter] public OneOf.OneOf<global::Avalonia.RelativePoint?, string> StartPoint { get; set; }

        public new AM.LinearGradientBrush NativeControl => (AM.LinearGradientBrush)((AvaloniaObject)this).NativeControl;

        protected override AM.LinearGradientBrush CreateNativeElement() => new();

        protected override void HandleParameter(string name, object value)
        {
            switch (name)
            {
                case nameof(EndPoint):
                    if (!Equals(EndPoint, value))
                    {
                        EndPoint = (OneOf.OneOf<global::Avalonia.RelativePoint?,string>)value;
                        if (EndPoint.IsT0)
                        {
                            NativeControl.EndPoint = (global::Avalonia.RelativePoint)EndPoint.AsT0;
                        }
                        else 
                        {
                            NativeControl.EndPoint = global::Avalonia.RelativePoint.Parse(EndPoint.AsT1);
                        }
                    }
                    break;
                case nameof(StartPoint):
                    if (!Equals(StartPoint, value))
                    {
                        StartPoint = (OneOf.OneOf<global::Avalonia.RelativePoint?,string>)value;
                        if (StartPoint.IsT0)
                        {
                            NativeControl.StartPoint = (global::Avalonia.RelativePoint)StartPoint.AsT0;
                        }
                        else 
                        {
                            NativeControl.StartPoint = global::Avalonia.RelativePoint.Parse(StartPoint.AsT1);
                        }
                    }
                    break;

                default:
                    base.HandleParameter(name, value);
                    break;
            }
        }

        static partial void RegisterAdditionalHandlers();
    }
}
