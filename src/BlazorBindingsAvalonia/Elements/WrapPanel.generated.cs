// <auto-generated>
//     This code was generated by a BlazorBindingsAvalonia component generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>



#pragma warning disable CA2252

namespace BlazorBindingsAvalonia.Elements
{
    /// <summary>
    /// Positions child elements in sequential position from left to right, breaking content to the next line at the edge of the containing box. Subsequent ordering happens sequentially from top to bottom or from right to left, depending on the value of the <see cref="P:Avalonia.Controls.WrapPanel.Orientation" /> property.
    /// </summary>
    public partial class WrapPanel : Panel
    {
        static WrapPanel()
        {
            RegisterAdditionalHandlers();
        }

        /// <summary>
        /// Gets or sets the height of all items in the WrapPanel.
        /// </summary>
        [Parameter] public double? ItemHeight { get; set; }
        /// <summary>
        /// Gets or sets the width of all items in the WrapPanel.
        /// </summary>
        [Parameter] public double? ItemWidth { get; set; }
        /// <summary>
        /// Gets or sets the orientation in which child controls will be layed out.
        /// </summary>
        [Parameter] public global::Avalonia.Layout.Orientation? Orientation { get; set; }

        public new AC.WrapPanel NativeControl => (AC.WrapPanel)((AvaloniaObject)this).NativeControl;

        protected override AC.WrapPanel CreateNativeElement() => new();

        protected override void HandleParameter(string name, object value)
        {
            switch (name)
            {
                case nameof(ItemHeight):
                    if (!Equals(ItemHeight, value))
                    {
                        ItemHeight = (double?)value;
                        NativeControl.ItemHeight = ItemHeight ?? (double)AC.WrapPanel.ItemHeightProperty.GetDefaultValue(AC.WrapPanel.ItemHeightProperty.OwnerType);
                    }
                    break;
                case nameof(ItemWidth):
                    if (!Equals(ItemWidth, value))
                    {
                        ItemWidth = (double?)value;
                        NativeControl.ItemWidth = ItemWidth ?? (double)AC.WrapPanel.ItemWidthProperty.GetDefaultValue(AC.WrapPanel.ItemWidthProperty.OwnerType);
                    }
                    break;
                case nameof(Orientation):
                    if (!Equals(Orientation, value))
                    {
                        Orientation = (global::Avalonia.Layout.Orientation?)value;
                        NativeControl.Orientation = Orientation ?? (global::Avalonia.Layout.Orientation)AC.WrapPanel.OrientationProperty.GetDefaultValue(AC.WrapPanel.OrientationProperty.OwnerType);
                    }
                    break;

                default:
                    base.HandleParameter(name, value);
                    break;
            }
        }

        static partial void RegisterAdditionalHandlers();
    }
}
