<CascadingValue Value="_editContext" IsFixed="true" ChildContent="@ChildContent?.Invoke(EditContext)" />

@code {
    EditContext _editContext;

    [Parameter] public EditContext EditContext { get; set; }
    [Parameter] public object Model { get; set; }
    [Parameter] public RenderFragment<EditContext> ChildContent { get; set; }

    [Parameter] public EventCallback<EditContext> OnValidSubmit { get; set; }
    [Parameter] public EventCallback<EditContext> OnInvalidSubmit { get; set; }

    protected override void OnInitialized()
    {
        _editContext = EditContext ?? new EditContext(Model);
    }    

    public async Task Submit()
    {
        _editContext.Validate();

        var hasErrors = _editContext.GetValidationMessages().Any();
        await (hasErrors ? OnInvalidSubmit : OnValidSubmit).InvokeAsync(_editContext);
    }
}
