@using Blazored.FluentValidation
@using ValidationsSample.Models;
@using ValidationsSample.Validation

<ContentPage>
    <VerticalStackLayout Padding="6" Spacing="6">
        <Button Text="Add FluentValidator" OnClick="AddFluentValidator" IsEnabled="!useFluentValidator" />
        <Button Text="Add DataAnnotationsValidator" OnClick="AddDataAnnotationsValidator" IsEnabled="!useDataAnnotationsValidator" />

        <MobileEditForm @ref="editForm" Model="logInModel" OnValidSubmit="OnValidSubmit" OnInvalidSubmit="OnInvalidSubmit">
            @if (useFluentValidator)
            {
                <FluentValidationValidator />
            }
            @if (useDataAnnotationsValidator)
            {
                <DataAnnotationsValidator />
            }

            <ValidatedEntry @bind-Text="@logInModel.Email" Placeholder="Email" />
            <ValidatedEntry @bind-Text="@logInModel.Password" Placeholder="Password" />
            <ValidatedEntry @bind-Text="@logInModel.ConfirmPassword" Placeholder="Confirm password" />

            <Button Text="Submit" OnClick="() => editForm.Submit()" />
            <Label Text="@statusText" />
        </MobileEditForm>
    </VerticalStackLayout>
</ContentPage>

@code {
    MobileEditForm editForm;
    LogInModel logInModel = new();

    bool useFluentValidator = false;
    bool useDataAnnotationsValidator = false;
    string statusText;

    void OnValidSubmit() => statusText = "Success!";
    void OnInvalidSubmit() => statusText = "Failure!";

    void AddFluentValidator() => useFluentValidator = true;
    void AddDataAnnotationsValidator() => useDataAnnotationsValidator = true;
}